{"version":3,"file":"index.js","mappings":"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","sources":["webpack://prettyJson/webpack/universalModuleDefinition","webpack://prettyJson/./src/index.ts","webpack://prettyJson/../utils/lib/esm/index.js","webpack://prettyJson/webpack/bootstrap","webpack://prettyJson/webpack/before-startup","webpack://prettyJson/webpack/startup","webpack://prettyJson/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"prettyJson\"] = factory();\n\telse\n\t\troot[\"prettyJson\"] = factory();\n})(this, () => {\nreturn ","import { capitalize, getType, isArray, isBigInt, isBoolean, isFunction, isNull, isNumber, isPrimary, isString, isSymbol, padEnd, padStart, simpleMerge, type UnionWithException } from '@n3bula/utils';\n\nconst IS_CSS_LOADED: symbol = Symbol('is_CSS_Loaded');\n\nconst DOM_CACHE: Map<string, HTMLElement> = new Map();\n\n/** @public */\nexport const loadCSS = () => {\n  if (window && (window as any)[IS_CSS_LOADED]) return;\n  const style = document.createElement('style');\n  import('./json.css').then(value => {\n    style.textContent = value.default as unknown as string;\n    document.head.appendChild(style);\n    Object.defineProperty(window, IS_CSS_LOADED, {\n      value: true,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    });\n  });\n};\n\nconst render = (domID: string | HTMLElement, content: string) => {\n  let dom: HTMLElement | null;\n  if (typeof domID === 'string') {\n    dom = DOM_CACHE.get(domID) || document.getElementById(domID);\n    DOM_CACHE.set(domID, dom!);\n  } else {\n    dom = domID;\n  }\n  if (dom) {\n    const pre = document.createElement('pre');\n    pre.classList.add('json-container');\n    pre.innerHTML = content;\n    dom.appendChild(pre);\n  }\n};\n\n/** @public */\nexport const toHTML = (content: unknown, options: Omit<Partial<PrettyJSONOptions>, 'output'> = {}) => {\n  const result = prettyJSONFormatter(content, {\n    ...options,\n    output: 'html',\n  });\n  return {\n    value: result,\n    render(domID: string | HTMLElement) {\n      render(domID, result);\n    }\n  };\n};\n\n/** @public */\nexport const toText = (content: unknown, options: Omit<Partial<PrettyJSONOptions>, 'output'> = {}) => {\n  const result = prettyJSONFormatter(content, {\n    ...options,\n    output: 'text',\n  });\n  return {\n    value: result,\n    render(domID: string | HTMLElement) {\n      render(domID, result);\n    }\n  };\n};\n\n/** @public */\nexport type PrettyJSONOptions = {\n  output: 'html' | 'text';\n  indent: number;\n  matrix: boolean;\n  htmlMarks: ReturnType<typeof presetMarks>;\n  quoteKeys: boolean;\n  singleQuote: boolean;\n  trailingComma: boolean;\n};\n\nconst defaults: Omit<PrettyJSONOptions, 'htmlMarks'> = {\n  output: 'html',\n  indent: 2,\n  matrix: false,\n  quoteKeys: false,\n  singleQuote: false,\n  trailingComma: true,\n};\n\n/** @public */\nexport const prettyJSONFormatter = (content: unknown, options: Partial<Omit<PrettyJSONOptions, 'htmlMarks'>> = {}): string => {\n  const config = simpleMerge<PrettyJSONOptions>(defaults as PrettyJSONOptions, options);\n  config.htmlMarks = presetMarks(config);\n  if (config.matrix) {\n    if (isMatrix(content)) {\n      return matrixFormatter(content, config);\n    } else {\n      throw new TypeError('Input should be a matrix.');\n    }\n  }\n  return mainFormatter(content, config);\n};\n\nloadCSS();\n\nexport default prettyJSONFormatter;\n\ntype MarkType = UnionWithException<[\n  'string',\n  'number',\n  'boolean',\n  'symbol',\n  'bigInt',\n  'null',\n  'undefined',\n  'array',\n  'object',\n  'date',\n  'regexp',\n  'function',\n  'mark',\n]>;\n\nconst presetMarks = (options: PrettyJSONOptions) => {\n  const isHTML = options.output === 'html';\n\n  const typeMark = (value: string | number | boolean, type: MarkType) =>\n    isHTML\n      ? `<span class=\"json-${type}\">${value}</span>`\n      : `${value}`;\n\n  const QUOTE = options.singleQuote\n    ? typeMark('\\'', 'mark')\n    : typeMark('\"', 'mark');\n\n  const LT = isHTML ? '&lt;' : '<';\n  const GT = isHTML ? '&gt;' : '>';\n\n  const STRING = (value: string) => typeMark(`${QUOTE}${value}${QUOTE}`, 'string');\n  const OBJECTKEY = options.quoteKeys\n    ? STRING\n    : (value: string) => typeMark(`${value}`, 'string');\n\n  return {\n    typeMark,\n    TAB: '\\t',\n    QUOTE,\n    SPACE: isHTML ? '&nbsp;' : ' ',\n    LINEBREAK: '\\n',\n    SEMI: typeMark(': ', 'mark'),\n    ARROW: typeMark(' => ', 'mark'),\n    COMMA: typeMark(',', 'mark'),\n    ARRAYLT: typeMark('[', 'array'),\n    ARRAYRT: typeMark(']', 'array'),\n    OBJECTLT: typeMark('{', 'object'),\n    OBJECTRT: typeMark('}', 'object'),\n    NULL: typeMark('null', 'null'),\n    UNDEFINED: typeMark('undefined', 'undefined'),\n    CIRCULAR_ERROR: typeMark(`${LT}Circular structure detected!${GT}`, 'error'),\n    DATE: (value: Date) => typeMark(value.toString(), 'mark'),\n    ERROR: (value: string) => typeMark(value, 'error'),\n    ITALIC: (value: string) => typeMark(value, 'italic'),\n    STRING,\n    NUMBER: (value: number) => typeMark(`${value}`, 'number'),\n    SYMBOL: (value: symbol) => typeMark(value.toString(), 'symbol'),\n    BIGINT: (value: bigint) => typeMark(`${value.toString()}n`, 'bigint'),\n    BOOLEAN: (value: boolean) => typeMark(value ? 'true' : 'false', 'boolean'),\n    FUNCTION: (value: string) => typeMark(value, 'function'),\n    OBJECTKEY,\n  };\n};\n\nfunction isPrimaryObject(input: unknown): input is string | number | boolean {\n  return ['string', 'number', 'boolean'].includes(getType(input));\n}\n\nfunction isMatrix(arr: unknown): arr is any[][] {\n  if (!isArray(arr)) return false;\n  const colLen = arr[0].length;\n  return !arr.some(ar => !isArray(ar) || ar.length !== colLen);\n}\n\nfunction findMatrixMaxLength(matrix: any[][]): number {\n  const rowLen = matrix.length;\n  const colLen = matrix[0].length;\n  let maxLength = 0;\n  for (let i = 0; i < rowLen; i += 1) {\n    const row = matrix[i];\n    for (let j = 0; j < colLen; j += 1) {\n      const ele = `${row[j]}`;\n      if (ele.length > maxLength) {\n        maxLength = ele.length;\n      }\n    }\n  }\n  return maxLength;\n}\n\nfunction matrixFormatter(input: any[][], options: PrettyJSONOptions): string {\n  const { htmlMarks, indent, output } = options;\n  const rowLen = input.length;\n  let str = '';\n\n  if (output === 'text') {\n    const space = ' ';\n    const gap = space.repeat(2);\n    const colLen = input[0].length;\n    const rowIdxLength = `${rowLen}`.length;\n    const maxLength = findMatrixMaxLength(input);\n\n    str = `${padStart(space, rowIdxLength, space)}${gap}${Array.from({ length: colLen }, (_, i) => padEnd('' + i, maxLength, space)).join(gap)\n      }${gap}${htmlMarks.LINEBREAK}`;\n\n    for (let i = 0; i < rowLen; i += 1) {\n      str += `${padStart('' + i, rowIdxLength, space)}${gap}${input[i].map(item => padEnd('' + item, maxLength, space)).join(gap)}${gap}${htmlMarks.LINEBREAK}`;\n    }\n  } else {\n    str = `${htmlMarks.ARRAYLT}${htmlMarks.LINEBREAK}`;\n\n    const convert = (item: string | number): string => {\n      if (typeof item === 'string') {\n        return htmlMarks.STRING(item);\n      }\n      return htmlMarks.NUMBER(item);\n    };\n\n    for (let i = 0; i < rowLen; i += 1) {\n      str += `${htmlMarks.SPACE.repeat(indent)}${htmlMarks.ARRAYLT} ${input[i].map(convert).join(', ')} ${htmlMarks.ARRAYRT}${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    }\n\n    str += `${htmlMarks.ARRAYRT}${htmlMarks.LINEBREAK}`;\n  }\n\n  return str;\n}\n\nfunction mainFormatter(input: unknown, options: PrettyJSONOptions, level: number = 1, cacheMap = new WeakMap()): string {\n  const { htmlMarks } = options;\n  if (isPrimary(input)) {\n    return primaryFormatter(input, options);\n  }\n  if (isFunction(input)) {\n    return functionFormatter(input, options);\n  }\n  if (isPrimaryObject(input)) {\n    return primaryObjectFormatter(input, options);\n  }\n  const type = getType(input);\n  if (type === 'date') {\n    return htmlMarks.DATE(input as Date);\n  }\n  if (type === 'error') {\n    return errorFormatter(input as Error, options);\n  }\n  if (type === 'object') {\n    return objectFormatter(input as {}, options, level, cacheMap);\n  }\n  if (type === 'array') {\n    return arrayFormatter(input as any[], options, level, cacheMap);\n  }\n  if (type === 'map') {\n    return mapFormatter(input as Map<any, any>, options, level, cacheMap);\n  }\n  return '';\n}\n\nfunction mapFormatter(\n  input: Map<any, any>,\n  options: PrettyJSONOptions,\n  level: number,\n  cacheMap: WeakMap<object, any>,\n): string {\n  const { htmlMarks, indent } = options;\n  if (cacheMap.has(input)) {\n    return htmlMarks.CIRCULAR_ERROR;\n  }\n  cacheMap.set(input, true);\n  let str = `${htmlMarks.ITALIC('Map(' + input.size + ')')} ${htmlMarks.OBJECTLT}${htmlMarks.LINEBREAK}`;\n\n  const entries = input.entries();\n\n  let entry;\n  while (entry = entries.next()) {\n    if (entry.value) {\n      const key = entry.value[0];\n      const val = entry.value[1];\n      str += `${htmlMarks.SPACE.repeat(indent * level)}${mainFormatter(key, options, level + 1, cacheMap)}${htmlMarks.ARROW}${mainFormatter(val, options, level + 1, cacheMap)}`;\n    }\n\n    if (entry.done) {\n      break;\n    } else {\n      str += `${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    }\n  }\n\n  str += `${htmlMarks.SPACE.repeat(indent * (level - 1))}${htmlMarks.OBJECTRT}`;\n  return str;\n}\n\nfunction arrayFormatter(\n  input: any[],\n  options: PrettyJSONOptions,\n  level: number,\n  cacheMap: WeakMap<object, any>,\n): string {\n  const { htmlMarks, indent } = options;\n  if (cacheMap.has(input)) {\n    return htmlMarks.CIRCULAR_ERROR;\n  }\n  cacheMap.set(input, true);\n  let str = `${htmlMarks.ARRAYLT}${htmlMarks.LINEBREAK}`;\n\n  for (let i = 0, len = input.length; i < len; i += 1) {\n    str += `${htmlMarks.SPACE.repeat(indent * level)}${mainFormatter(input[i], options, level + 1, cacheMap)}`;\n    if (i < len - 1) {\n      str += `${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    } else {\n      str += `${options.trailingComma ? htmlMarks.COMMA : ''}${htmlMarks.LINEBREAK}`;\n    }\n  }\n\n  str += `${htmlMarks.SPACE.repeat(indent * (level - 1))}${htmlMarks.ARRAYRT}`;\n  return str;\n}\n\nfunction objectFormatter(\n  input: { [key: string | symbol]: any; },\n  options: PrettyJSONOptions,\n  level: number,\n  cacheMap: WeakMap<object, any>,\n): string {\n  const keys = Reflect.ownKeys(input);\n  const { htmlMarks, indent } = options;\n  if (cacheMap.has(input)) {\n    return htmlMarks.CIRCULAR_ERROR;\n  }\n  cacheMap.set(input, true);\n  let str = `${htmlMarks.OBJECTLT}${htmlMarks.LINEBREAK}`;\n\n  for (let i = 0, len = keys.length; i < len; i += 1) {\n    const key = typeof keys[i] === 'string'\n      ? htmlMarks.OBJECTKEY(keys[i] as string)\n      : htmlMarks.SYMBOL(keys[i] as symbol);\n    str += `${htmlMarks.SPACE.repeat(indent * level)}${key}${htmlMarks.SEMI}${mainFormatter(input[keys[i]], options, level + 1, cacheMap)}`;\n    if (i < len - 1) {\n      str += `${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    } else {\n      str += `${options.trailingComma ? htmlMarks.COMMA : ''}${htmlMarks.LINEBREAK}`;\n    }\n  }\n  str += `${htmlMarks.SPACE.repeat(indent * (level - 1))}${htmlMarks.OBJECTRT}`;\n  return str;\n}\n\nfunction errorFormatter(input: Error, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  return input.stack\n    ? input.stack.replace(new RegExp(`(${input.name}): (${input.message})`), (_, $1, $2) => `${htmlMarks.ERROR($1)}${htmlMarks.SEMI}${$2}`)\n    : `${htmlMarks.ERROR(input.name)}${htmlMarks.SEMI}${input.message}`;\n}\n\nfunction primaryObjectFormatter(input: string | number | boolean, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  const type = getType(input);\n  const template = (t: string, val: string) => `${htmlMarks.ITALIC(capitalize(t))} ${htmlMarks.OBJECTLT} ${val} ${htmlMarks.OBJECTRT}`;\n  if (type === 'number') {\n    return template(type, htmlMarks.NUMBER(input as number));\n  } else if (type === 'string') {\n    return template(type, htmlMarks.STRING(input as string));\n  } else if (type === 'boolean') {\n    return template(type, htmlMarks.BOOLEAN(input as boolean));\n  }\n  return '';\n}\n\nfunction functionFormatter(input: () => void, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  const funcStr = htmlMarks.typeMark(htmlMarks.ITALIC('ƒ '), 'function-identifier')\n    + input.toString()\n      .replace(/^(function )(\\w+)\\(/g, ($0, $1, $2) => `${$1}${htmlMarks.typeMark($2, 'function-name')}(`)\n      .replace(/^function /, '')\n      .replace(/(^function|=>)/, $0 => htmlMarks.typeMark($0, 'function-identifier'));\n  return options.htmlMarks.FUNCTION(funcStr);\n}\n\nfunction primaryFormatter(input: unknown, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  if (isString(input)) {\n    return htmlMarks.STRING(input);\n  } else if (isNumber(input)) {\n    return htmlMarks.NUMBER(input);\n  } else if (isBoolean(input)) {\n    return htmlMarks.BOOLEAN(input);\n  } else if (isBigInt(input)) {\n    return htmlMarks.BIGINT(input);\n  } else if (isSymbol(input)) {\n    return htmlMarks.SYMBOL(input);\n  } else if (isNull(input)) {\n    return htmlMarks.NULL;\n  }\n  return htmlMarks.UNDEFINED;\n}\n","/** @public */\nexport const getType = (thing) => Object.prototype.toString.call(thing).slice(8, -1).toLowerCase();\n/** @public */\nexport const isType = (thing, type) => getType(thing) === type.toLowerCase();\n/** @public */\nexport const isNumber = (thing) => isType(thing, 'number');\n/** @public */\nexport const isString = (thing) => isType(thing, 'string');\n/** @public */\nexport const isBoolean = (thing) => isType(thing, 'boolean');\n/** @public */\nexport const isBigInt = (thing) => isType(thing, 'bigint');\n/** @public */\nexport const isSymbol = (thing) => isType(thing, 'symbol');\n/** @public */\nexport const isNull = (thing) => isType(thing, 'null');\n/** @public */\nexport const isUndefined = (thing) => isType(thing, 'undefined');\n/** @public */\nexport const isNullable = (thing) => isNull(thing) || isUndefined(thing);\n/** @public */\nexport const isPrimary = (thing) => {\n    if (thing !== null && (typeof thing === 'object' || typeof thing === 'function'))\n        return false;\n    return true;\n};\n/** @public */\nexport const isArray = (thing) => isType(thing, 'array');\n/** @public */\nexport const isFunction = (thing) => isType(thing, 'function');\n/** @public */\nexport const isObject = (thing) => isType(thing, 'object');\n/** @public */\nexport const capitalize = (str = '') => {\n    if (!str)\n        return '';\n    const firstLetter = str.slice(0, 1) || '';\n    const rest = str.slice(1);\n    return String(firstLetter).toUpperCase() + rest;\n};\n/** @public */\nexport const decapitalize = (str = '') => {\n    if (!str)\n        return '';\n    const firstLetter = str.slice(0, 1) || '';\n    const rest = str.slice(1);\n    return String(firstLetter).toLowerCase() + rest;\n};\n/** @public */\nexport const camel2kebab = (str = '') => {\n    if (!str)\n        return '';\n    return (str || '')\n        .replace(/([A-Z])(\\w)/g, (_, p1, p2) => `-${p1.toLowerCase()}${p2}`)\n        .replace(/_/gm, '-');\n};\n/** @public */\nexport const kebab2camel = (str = '') => {\n    if (!str)\n        return '';\n    return (str || '')\n        .replace(/[-_](\\w)/g, (_, p1) => p1.toUpperCase());\n};\n/** @public */\nexport const is32Bit = (char, i) => {\n    return char.codePointAt(i) > 0xffff;\n};\n/** @public */\nexport const getCodePointLength = (str) => {\n    let len = 0;\n    for (let i = 0, strLen = str.length; i < strLen; i += 1) {\n        if (is32Bit(str, i))\n            i++;\n        len++;\n    }\n    return len;\n};\n/** @public */\nexport const isAllSameChar = (str, char) => {\n    return new RegExp(`^(${char})\\\\1*$`).test(str);\n};\n/** @public */\nexport const getCharLength = (str) => {\n    return str.replace(/[^\\x00-\\xff]/g, '  ').length;\n};\n/** @public */\nexport const padStart = (str, length, char) => {\n    const strLen = getCodePointLength(str);\n    const padding = char.repeat(Math.max(0, length - strLen));\n    return padding + str;\n};\n/** @public */\nexport const padEnd = (str, length, char) => {\n    const strLen = getCodePointLength(str);\n    const padding = char.repeat(Math.max(0, length - strLen));\n    return str + padding;\n};\n/** @public */\nexport const padStartEnd = (str, length, char1 = '', char2 = char1) => {\n    const strLen = getCodePointLength(str);\n    const paddingLen = Math.max(0, length - strLen);\n    const leftPadingLen = Math.floor(paddingLen / 2);\n    const rightPadingLen = paddingLen - leftPadingLen;\n    return char1.repeat(leftPadingLen) + str + char2.repeat(rightPadingLen);\n};\n/** @public */\nexport const emptyPadStart = (length, str = '', pad = '') => {\n    return padStart(str, length, pad);\n};\n/** @public */\nexport const simpleMerge = (source, object = {}) => {\n    const merged = Object.assign({}, source);\n    Object.keys(source).forEach(key => {\n        if (isObject(source[key])) {\n            merged[key] = simpleMerge(source[key], object[key]);\n            return;\n        }\n        merged[key] = (object[key] || source[key]);\n    });\n    return merged;\n};\nexport default {\n    getType,\n    isType,\n    isNumber,\n    isString,\n    isArray,\n    isObject,\n    isNullable,\n    is32Bit,\n    getCodePointLength,\n    isAllSameChar,\n    getCharLength,\n    padStart,\n    padEnd,\n    padStartEnd,\n    emptyPadStart,\n    simpleMerge,\n};\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(88);\n",""],"names":["utils_1","require","IS_CSS_LOADED","Symbol","DOM_CACHE","Map","loadCSS","window","style","document","createElement","Promise","resolve","then","__importStar","value","textContent","head","appendChild","Object","defineProperty","writable","enumerable","configurable","exports","render","domID","content","dom","get","getElementById","set","pre","classList","add","innerHTML","toHTML","options","arguments","length","undefined","result","prettyJSONFormatter","assign","output","toText","defaults","indent","matrix","quoteKeys","singleQuote","trailingComma","config","simpleMerge","htmlMarks","presetMarks","isMatrix","matrixFormatter","TypeError","mainFormatter","isHTML","typeMark","type","concat","QUOTE","LT","GT","STRING","OBJECTKEY","TAB","SPACE","LINEBREAK","SEMI","ARROW","COMMA","ARRAYLT","ARRAYRT","OBJECTLT","OBJECTRT","NULL","UNDEFINED","CIRCULAR_ERROR","DATE","toString","ERROR","ITALIC","NUMBER","SYMBOL","BIGINT","BOOLEAN","FUNCTION","isPrimaryObject","input","includes","getType","arr","isArray","colLen","some","ar","findMatrixMaxLength","rowLen","maxLength","i","row","j","ele","str","space","gap","repeat","rowIdxLength","padStart","Array","from","_","padEnd","join","map","item","convert","level","cacheMap","WeakMap","isPrimary","primaryFormatter","isFunction","functionFormatter","primaryObjectFormatter","errorFormatter","objectFormatter","arrayFormatter","mapFormatter","has","size","entries","entry","next","key","val","done","len","keys","Reflect","ownKeys","stack","replace","RegExp","name","message","$1","$2","template","t","capitalize","funcStr","$0","isString","isNumber","isBoolean","isBigInt","isSymbol","isNull","thing","prototype","call","slice","toLowerCase","isType","isUndefined","isNullable","_typeof","isObject","firstLetter","rest","String","toUpperCase","decapitalize","camel2kebab","p1","p2","kebab2camel","is32Bit","char","codePointAt","getCodePointLength","strLen","isAllSameChar","test","getCharLength","padding","Math","max","padStartEnd","char1","char2","paddingLen","leftPadingLen","floor","rightPadingLen","emptyPadStart","pad","source","object","merged","forEach"],"sourceRoot":""}