{"version":3,"file":"index.min.js","mappings":"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","sources":["webpack://prettyJson/webpack/universalModuleDefinition","webpack://prettyJson/./src/index.ts","webpack://prettyJson/../utils/lib/esm/index.js","webpack://prettyJson/webpack/bootstrap","webpack://prettyJson/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"prettyJson\"] = factory();\n\telse\n\t\troot[\"prettyJson\"] = factory();\n})(this, () => {\nreturn ","import { capitalize, getType, isArray, isBigInt, isBoolean, isFunction, isNull, isNumber, isPrimary, isString, isSymbol, padEnd, padStart, simpleMerge, type UnionWithException } from '@n3bula/utils';\n\nconst IS_CSS_LOADED: symbol = Symbol('is_CSS_Loaded');\n\nconst DOM_CACHE: Map<string, HTMLElement> = new Map();\n\n/** @public */\nexport const loadCSS = () => {\n  if (window && (window as any)[IS_CSS_LOADED]) return;\n  const style = document.createElement('style');\n  import('./json.css').then(value => {\n    style.textContent = value.default as unknown as string;\n    document.head.appendChild(style);\n    Object.defineProperty(window, IS_CSS_LOADED, {\n      value: true,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    });\n  });\n};\n\nexport const render = (domID: string | HTMLElement, content: string) => {\n  let dom: HTMLElement | null;\n  if (typeof domID === 'string') {\n    dom = DOM_CACHE.get(domID) || document.getElementById(domID);\n    DOM_CACHE.set(domID, dom!);\n  } else {\n    dom = domID;\n  }\n  if (dom) {\n    const pre = document.createElement('pre');\n    pre.classList.add('json-container');\n    pre.innerHTML = content;\n    dom.appendChild(pre);\n  }\n};\n\n/** @public */\nexport const toHTML = (content: unknown, options: Omit<Partial<PrettyJSONOptions>, 'output'> = {}) => {\n  const result = prettyJSONFormatter(content, {\n    ...options,\n    output: 'html',\n  });\n  return {\n    value: result,\n    render(domID: string | HTMLElement) {\n      render(domID, result);\n    }\n  };\n};\n\n/** @public */\nexport const toText = (content: unknown, options: Omit<Partial<PrettyJSONOptions>, 'output'> = {}) => {\n  const result = prettyJSONFormatter(content, {\n    ...options,\n    output: 'text',\n  });\n  return {\n    value: result,\n    render(domID: string | HTMLElement) {\n      render(domID, result);\n    }\n  };\n};\n\n/** @public */\nexport type PrettyJSONOptions = {\n  output: 'html' | 'text';\n  indent: number;\n  htmlMarks: ReturnType<typeof presetMarks>;\n  quoteKeys: boolean;\n  singleQuote: boolean;\n  oneLineArray: boolean;\n  trailingComma: boolean;\n};\n\nconst defaults: Omit<PrettyJSONOptions, 'htmlMarks'> = {\n  output: 'html',\n  indent: 2,\n  quoteKeys: false,\n  singleQuote: true,\n  oneLineArray: false,\n  trailingComma: true,\n};\n\n/** @public */\nexport const prettyJSONFormatter = (content: unknown, options: Partial<Omit<PrettyJSONOptions, 'htmlMarks'>> = {}): string => {\n  const config = simpleMerge<PrettyJSONOptions>(defaults as PrettyJSONOptions, options);\n  config.htmlMarks = presetMarks(config);\n  if (isArray(content)) {\n    if (config.oneLineArray) {\n      if (hasArrayChildren(content)) {\n        return flat2ArrayFormatter(content, config);\n      } else {\n        return flatArrayFormatter(content, config);\n      }\n    }\n  }\n  return mainFormatter(content, config);\n};\n\nloadCSS();\n\nexport default prettyJSONFormatter;\n\ntype MarkType = UnionWithException<[\n  'string',\n  'number',\n  'boolean',\n  'symbol',\n  'bigInt',\n  'null',\n  'undefined',\n  'array',\n  'object',\n  'date',\n  'regexp',\n  'function',\n  'mark',\n]>;\n\nconst presetMarks = (options: PrettyJSONOptions) => {\n  const isHTML = options.output === 'html';\n\n  const typeMark = (value: string | number | boolean, type: MarkType) =>\n    isHTML\n      ? `<span class=\"json-${type}\">${value}</span>`\n      : `${value}`;\n\n  const QUOTE = options.singleQuote\n    ? typeMark('\\'', 'mark')\n    : typeMark('\"', 'mark');\n\n  const LT = isHTML ? '&lt;' : '<';\n  const GT = isHTML ? '&gt;' : '>';\n\n  const STRING = (value: string) => typeMark(`${QUOTE}${value}${QUOTE}`, 'string');\n  const OBJECTKEY = options.quoteKeys\n    ? STRING\n    : (value: string) => typeMark(`${value}`, 'string');\n\n  return {\n    typeMark,\n    TAB: '\\t',\n    QUOTE,\n    SPACE: isHTML ? '&nbsp;' : ' ',\n    LINEBREAK: '\\n',\n    SEMI: typeMark(': ', 'mark'),\n    ARROW: typeMark(' => ', 'mark'),\n    COMMA: typeMark(',', 'mark'),\n    ARRAYLT: typeMark('[', 'array'),\n    ARRAYRT: typeMark(']', 'array'),\n    OBJECTLT: typeMark('{', 'object'),\n    OBJECTRT: typeMark('}', 'object'),\n    NULL: typeMark('null', 'null'),\n    UNDEFINED: typeMark('undefined', 'undefined'),\n    CIRCULAR_ERROR: typeMark(`${LT}Circular structure detected!${GT}`, 'error'),\n    DATE: (value: Date) => typeMark(value.toString(), 'mark'),\n    ERROR: (value: string) => typeMark(value, 'error'),\n    ITALIC: (value: string) => typeMark(value, 'italic'),\n    STRING,\n    NUMBER: (value: number) => typeMark(`${value}`, 'number'),\n    SYMBOL: (value: symbol) => typeMark(value.toString(), 'symbol'),\n    BIGINT: (value: bigint) => typeMark(`${value.toString()}n`, 'bigint'),\n    BOOLEAN: (value: boolean) => typeMark(value ? 'true' : 'false', 'boolean'),\n    FUNCTION: (value: string) => typeMark(value, 'function'),\n    OBJECTKEY,\n  };\n};\n\nfunction isPrimaryObject(input: unknown): input is string | number | boolean {\n  return ['string', 'number', 'boolean'].includes(getType(input));\n}\n\nfunction hasArrayChildren(arr: any[]): boolean {\n  return arr.some(ar => isArray(ar));\n}\n\nfunction findArrayMaxLength(arr: any[][]): number {\n  const rowLen = arr.length;\n  const colLen = arr[0].length;\n  let maxLength = 0;\n  for (let i = 0; i < rowLen; i += 1) {\n    const row = arr[i];\n    for (let j = 0; j < colLen; j += 1) {\n      const ele = `${row[j]}`;\n      if (ele.length > maxLength) {\n        maxLength = ele.length;\n      }\n    }\n  }\n  return maxLength;\n}\n\nfunction flatArrayFormatter(input: any[], options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  const rowLen = input.length;\n  let str = '';\n\n  str = `${htmlMarks.ARRAYLT} `;\n\n  for (let i = 0; i < rowLen; i += 1) {\n    const arrStr = mainFormatter(input[i], options);\n    str += `${arrStr}${i < rowLen - 1 ? htmlMarks.COMMA : ''} `;\n  }\n\n  str += `${htmlMarks.ARRAYRT}`;\n\n  return str;\n}\n\nfunction flat2ArrayFormatter(input: any[][], options: PrettyJSONOptions): string {\n  const { htmlMarks, indent, output } = options;\n  const rowLen = input.length;\n  let str = '';\n\n  if (output === 'html') {\n    str = `${htmlMarks.ARRAYLT}${htmlMarks.LINEBREAK}`;\n\n    const convert = (item: string | number): string => {\n      if (typeof item === 'string') {\n        return htmlMarks.STRING(item);\n      }\n      return htmlMarks.NUMBER(item);\n    };\n\n    for (let i = 0; i < rowLen; i += 1) {\n      const arrStr = isArray(input[i])\n        ? `${htmlMarks.ARRAYLT} ${input[i].map(convert).join(', ')} ${htmlMarks.ARRAYRT}`\n        : mainFormatter(input[i], options, 2);\n      str += `${htmlMarks.SPACE.repeat(indent)}${arrStr}${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    }\n\n    str += `${htmlMarks.ARRAYRT}${htmlMarks.LINEBREAK}`;\n  } else {\n    const space = ' ';\n    const gap = space.repeat(2);\n    const colLen = input[0].length;\n    const rowIdxLength = `${rowLen}`.length;\n    const maxLength = findArrayMaxLength(input);\n\n    str = `${padStart(space, rowIdxLength, space)}${gap}${Array.from({ length: colLen }, (_, i) => padEnd('' + i, maxLength, space)).join(gap)\n      }${gap}${htmlMarks.LINEBREAK}`;\n\n    for (let i = 0; i < rowLen; i += 1) {\n      const arrStr = isArray(input[i])\n        ? input[i].map(item => padEnd('' + item, maxLength, space)).join(gap)\n        : mainFormatter(input[i], options);\n      str += `${padStart('' + i, rowIdxLength, space)}${gap}${arrStr}${gap}${htmlMarks.LINEBREAK}`;\n    }\n  }\n\n  return str;\n}\n\nfunction mainFormatter(input: unknown, options: PrettyJSONOptions, level: number = 1, cacheMap = new WeakMap()): string {\n  const { htmlMarks } = options;\n  if (isPrimary(input)) {\n    return primaryFormatter(input, options);\n  }\n  if (isFunction(input)) {\n    return functionFormatter(input, options);\n  }\n  if (isPrimaryObject(input)) {\n    return primaryObjectFormatter(input, options);\n  }\n  const type = getType(input);\n  if (type === 'date') {\n    return htmlMarks.DATE(input as Date);\n  }\n  if (type === 'error') {\n    return errorFormatter(input as Error, options);\n  }\n  if (type === 'object') {\n    return objectFormatter(input as {}, options, level, cacheMap);\n  }\n  if (type === 'array') {\n    return arrayFormatter(input as any[], options, level, cacheMap);\n  }\n  if (type === 'map') {\n    return mapFormatter(input as Map<any, any>, options, level, cacheMap);\n  }\n  return '';\n}\n\nfunction mapFormatter(\n  input: Map<any, any>,\n  options: PrettyJSONOptions,\n  level: number,\n  cacheMap: WeakMap<object, any>,\n): string {\n  const { htmlMarks, indent } = options;\n  if (cacheMap.has(input)) {\n    return htmlMarks.CIRCULAR_ERROR;\n  }\n  cacheMap.set(input, true);\n  let str = `${htmlMarks.ITALIC('Map(' + input.size + ')')} ${htmlMarks.OBJECTLT}${htmlMarks.LINEBREAK}`;\n\n  const entries = input.entries();\n\n  let entry;\n  while (entry = entries.next()) {\n    if (entry.value) {\n      const key = entry.value[0];\n      const val = entry.value[1];\n      str += `${htmlMarks.SPACE.repeat(indent * level)}${mainFormatter(key, options, level + 1, cacheMap)}${htmlMarks.ARROW}${mainFormatter(val, options, level + 1, cacheMap)}`;\n    }\n\n    if (entry.done) {\n      break;\n    } else {\n      str += `${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    }\n  }\n\n  str += `${htmlMarks.SPACE.repeat(indent * (level - 1))}${htmlMarks.OBJECTRT}`;\n  return str;\n}\n\nfunction arrayFormatter(\n  input: any[],\n  options: PrettyJSONOptions,\n  level: number,\n  cacheMap: WeakMap<object, any>,\n): string {\n  const { htmlMarks, indent } = options;\n  if (cacheMap.has(input)) {\n    return htmlMarks.CIRCULAR_ERROR;\n  }\n  cacheMap.set(input, true);\n  let str = `${htmlMarks.ARRAYLT}${htmlMarks.LINEBREAK}`;\n\n  for (let i = 0, len = input.length; i < len; i += 1) {\n    str += `${htmlMarks.SPACE.repeat(indent * level)}${mainFormatter(input[i], options, level + 1, cacheMap)}`;\n    if (i < len - 1) {\n      str += `${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    } else {\n      str += `${options.trailingComma ? htmlMarks.COMMA : ''}${htmlMarks.LINEBREAK}`;\n    }\n  }\n\n  str += `${htmlMarks.SPACE.repeat(indent * (level - 1))}${htmlMarks.ARRAYRT}`;\n  return str;\n}\n\nfunction objectFormatter(\n  input: { [key: string | symbol]: any; },\n  options: PrettyJSONOptions,\n  level: number,\n  cacheMap: WeakMap<object, any>,\n): string {\n  const keys = Reflect.ownKeys(input);\n  const { htmlMarks, indent } = options;\n  if (cacheMap.has(input)) {\n    return htmlMarks.CIRCULAR_ERROR;\n  }\n  cacheMap.set(input, true);\n  let str = `${htmlMarks.OBJECTLT}${htmlMarks.LINEBREAK}`;\n\n  for (let i = 0, len = keys.length; i < len; i += 1) {\n    const key = typeof keys[i] === 'string'\n      ? htmlMarks.OBJECTKEY(keys[i] as string)\n      : htmlMarks.SYMBOL(keys[i] as symbol);\n    str += `${htmlMarks.SPACE.repeat(indent * level)}${key}${htmlMarks.SEMI}${mainFormatter(input[keys[i]], options, level + 1, cacheMap)}`;\n    if (i < len - 1) {\n      str += `${htmlMarks.COMMA}${htmlMarks.LINEBREAK}`;\n    } else {\n      str += `${options.trailingComma ? htmlMarks.COMMA : ''}${htmlMarks.LINEBREAK}`;\n    }\n  }\n  str += `${htmlMarks.SPACE.repeat(indent * (level - 1))}${htmlMarks.OBJECTRT}`;\n  return str;\n}\n\nfunction errorFormatter(input: Error, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  return input.stack\n    ? input.stack.replace(new RegExp(`(${input.name}): (${input.message})`), (_, $1, $2) => `${htmlMarks.ERROR($1)}${htmlMarks.SEMI}${$2}`)\n    : `${htmlMarks.ERROR(input.name)}${htmlMarks.SEMI}${input.message}`;\n}\n\nfunction primaryObjectFormatter(input: string | number | boolean, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  const type = getType(input);\n  const template = (t: string, val: string) => `${htmlMarks.ITALIC(capitalize(t))} ${htmlMarks.OBJECTLT} ${val} ${htmlMarks.OBJECTRT}`;\n  if (type === 'number') {\n    return template(type, htmlMarks.NUMBER(input as number));\n  } else if (type === 'string') {\n    return template(type, htmlMarks.STRING(input as string));\n  } else if (type === 'boolean') {\n    return template(type, htmlMarks.BOOLEAN(input as boolean));\n  }\n  return '';\n}\n\nfunction functionFormatter(input: () => void, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  const funcStr = htmlMarks.typeMark(htmlMarks.ITALIC('ƒ '), 'function-identifier')\n    + input.toString()\n      .replace(/^(function )(\\w+)\\(/g, ($0, $1, $2) => `${$1}${htmlMarks.typeMark($2, 'function-name')}(`)\n      .replace(/^function /, '')\n      .replace(/(^function|=>)/, $0 => htmlMarks.typeMark($0, 'function-identifier'));\n  return options.htmlMarks.FUNCTION(funcStr);\n}\n\nfunction primaryFormatter(input: unknown, options: PrettyJSONOptions): string {\n  const { htmlMarks } = options;\n  if (isString(input)) {\n    return htmlMarks.STRING(input);\n  } else if (isNumber(input)) {\n    return htmlMarks.NUMBER(input);\n  } else if (isBoolean(input)) {\n    return htmlMarks.BOOLEAN(input);\n  } else if (isBigInt(input)) {\n    return htmlMarks.BIGINT(input);\n  } else if (isSymbol(input)) {\n    return htmlMarks.SYMBOL(input);\n  } else if (isNull(input)) {\n    return htmlMarks.NULL;\n  }\n  return htmlMarks.UNDEFINED;\n}\n","/** @public */\nexport const getType = (thing) => Object.prototype.toString.call(thing).slice(8, -1).toLowerCase();\n/** @public */\nexport const isType = (thing, type) => getType(thing) === type.toLowerCase();\n/** @public */\nexport const isNumber = (thing) => isType(thing, 'number');\n/** @public */\nexport const isString = (thing) => isType(thing, 'string');\n/** @public */\nexport const isBoolean = (thing) => isType(thing, 'boolean');\n/** @public */\nexport const isBigInt = (thing) => isType(thing, 'bigint');\n/** @public */\nexport const isSymbol = (thing) => isType(thing, 'symbol');\n/** @public */\nexport const isNull = (thing) => isType(thing, 'null');\n/** @public */\nexport const isUndefined = (thing) => isType(thing, 'undefined');\n/** @public */\nexport const isNullable = (thing) => isNull(thing) || isUndefined(thing);\n/** @public */\nexport const isPrimary = (thing) => {\n    if (thing !== null && (typeof thing === 'object' || typeof thing === 'function'))\n        return false;\n    return true;\n};\n/** @public */\nexport const isArray = (thing) => isType(thing, 'array');\n/** @public */\nexport const isFunction = (thing) => isType(thing, 'function');\n/** @public */\nexport const isObject = (thing) => isType(thing, 'object');\n/** @public */\nexport const capitalize = (str = '') => {\n    if (!str)\n        return '';\n    const firstLetter = str.slice(0, 1) || '';\n    const rest = str.slice(1);\n    return String(firstLetter).toUpperCase() + rest;\n};\n/** @public */\nexport const decapitalize = (str = '') => {\n    if (!str)\n        return '';\n    const firstLetter = str.slice(0, 1) || '';\n    const rest = str.slice(1);\n    return String(firstLetter).toLowerCase() + rest;\n};\n/** @public */\nexport const camel2kebab = (str = '') => {\n    if (!str)\n        return '';\n    return (str || '')\n        .replace(/([A-Z])(\\w)/g, (_, p1, p2) => `-${p1.toLowerCase()}${p2}`)\n        .replace(/_/gm, '-');\n};\n/** @public */\nexport const kebab2camel = (str = '') => {\n    if (!str)\n        return '';\n    return (str || '')\n        .replace(/[-_](\\w)/g, (_, p1) => p1.toUpperCase());\n};\n/** @public */\nexport const is32Bit = (char, i) => {\n    return char.codePointAt(i) > 0xffff;\n};\n/** @public */\nexport const getCodePointLength = (str) => {\n    let len = 0;\n    for (let i = 0, strLen = str.length; i < strLen; i += 1) {\n        if (is32Bit(str, i))\n            i++;\n        len++;\n    }\n    return len;\n};\n/** @public */\nexport const isAllSameChar = (str, char) => {\n    return new RegExp(`^(${char})\\\\1*$`).test(str);\n};\n/** @public */\nexport const getCharLength = (str) => {\n    return str.replace(/[^\\x00-\\xff]/g, '  ').length;\n};\n/** @public */\nexport const padStart = (str, length, char) => {\n    const strLen = getCodePointLength(str);\n    const padding = char.repeat(Math.max(0, length - strLen));\n    return padding + str;\n};\n/** @public */\nexport const padEnd = (str, length, char) => {\n    const strLen = getCodePointLength(str);\n    const padding = char.repeat(Math.max(0, length - strLen));\n    return str + padding;\n};\n/** @public */\nexport const padStartEnd = (str, length, char1 = '', char2 = char1) => {\n    const strLen = getCodePointLength(str);\n    const paddingLen = Math.max(0, length - strLen);\n    const leftPadingLen = Math.floor(paddingLen / 2);\n    const rightPadingLen = paddingLen - leftPadingLen;\n    return char1.repeat(leftPadingLen) + str + char2.repeat(rightPadingLen);\n};\n/** @public */\nexport const emptyPadStart = (length, str = '', pad = '') => {\n    return padStart(str, length, pad);\n};\n/** @public */\nexport const simpleMerge = (source, object = {}) => {\n    const merged = Object.assign({}, source);\n    Object.keys(source).forEach(key => {\n        if (isObject(source[key])) {\n            merged[key] = simpleMerge(source[key], object[key]);\n            return;\n        }\n        merged[key] = (object[key] || source[key]);\n    });\n    return merged;\n};\nexport default {\n    getType,\n    isType,\n    isNumber,\n    isString,\n    isArray,\n    isObject,\n    isNullable,\n    is32Bit,\n    getCodePointLength,\n    isAllSameChar,\n    getCharLength,\n    padStart,\n    padEnd,\n    padStartEnd,\n    emptyPadStart,\n    simpleMerge,\n};\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(88);\n"],"names":["root","factory","exports","module","define","amd","this","utils_1","require","IS_CSS_LOADED","Symbol","DOM_CACHE","Map","window","style","document","createElement","Promise","resolve","then","__importStar","value","textContent","head","appendChild","Object","defineProperty","writable","enumerable","configurable","domID","content","dom","get","getElementById","set","pre","classList","add","innerHTML","options","arguments","length","undefined","result","prettyJSONFormatter","assign","output","render","defaults","indent","quoteKeys","singleQuote","oneLineArray","trailingComma","config","simpleMerge","htmlMarks","presetMarks","isArray","some","ar","input","rowLen","str","concat","ARRAYLT","LINEBREAK","convert","item","STRING","NUMBER","i","arrStr","map","join","ARRAYRT","mainFormatter","SPACE","repeat","COMMA","space","gap","colLen","rowIdxLength","maxLength","arr","row","j","ele","findArrayMaxLength","padStart","Array","from","_","padEnd","flat2ArrayFormatter","flatArrayFormatter","loadCSS","isHTML","typeMark","type","QUOTE","LT","GT","OBJECTKEY","TAB","SEMI","ARROW","OBJECTLT","OBJECTRT","NULL","UNDEFINED","CIRCULAR_ERROR","DATE","toString","ERROR","ITALIC","SYMBOL","BIGINT","BOOLEAN","FUNCTION","level","cacheMap","WeakMap","isPrimary","isString","isNumber","isBoolean","isBigInt","isSymbol","isNull","primaryFormatter","isFunction","funcStr","replace","$0","$1","$2","functionFormatter","includes","getType","isPrimaryObject","template","t","val","capitalize","primaryObjectFormatter","stack","RegExp","name","message","errorFormatter","keys","Reflect","ownKeys","has","len","key","objectFormatter","arrayFormatter","entry","size","entries","next","done","mapFormatter","thing","prototype","call","slice","toLowerCase","isType","isUndefined","_typeof","firstLetter","rest","String","toUpperCase","p1","p2","char","codePointAt","strLen","is32Bit","test","getCodePointLength","Math","max","char1","char2","paddingLen","leftPadingLen","floor","rightPadingLen","pad","source","object","merged","forEach","isObject","isNullable","isAllSameChar","getCharLength","padStartEnd","emptyPadStart","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}