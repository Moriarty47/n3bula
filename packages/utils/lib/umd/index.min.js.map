{"version":3,"file":"index.min.js","mappings":"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","sources":["webpack://N3bulaUtils/webpack/universalModuleDefinition","webpack://N3bulaUtils/webpack/startup","webpack://N3bulaUtils/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"N3bulaUtils\"] = factory();\n\telse\n\t\troot[\"N3bulaUtils\"] = factory();\n})(this, () => {\nreturn ","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[88](0, __webpack_exports__);\n","type thingType = readonly [\n  'string',\n  'number',\n  'boolean',\n  'symbol',\n  'bigInt',\n  'null',\n  'undefined',\n  'array',\n  'object',\n  'date',\n  'regexp',\n  'function'\n];\n\ntype ThingType = thingType[number] | (string & {});\n\n/** @public */\nexport const getType = (thing: unknown): string =>\n  Object.prototype.toString.call(thing).slice(8, -1).toLowerCase();\n\n/** @public */\nexport const isType = (thing: unknown, type: ThingType): boolean =>\n  getType(thing) === type.toLowerCase();\n\n/** @public */\nexport const isNumber = (thing: unknown): thing is number => isType(thing, 'number');\n/** @public */\nexport const isString = (thing: unknown): thing is string => isType(thing, 'string');\n/** @public */\nexport const isArray = (thing: unknown): thing is any[] => isType(thing, 'array');\n/** @public */\nexport const isObject = (thing: unknown): thing is {} => isType(thing, 'object');\n/** @public */\nexport const isNullable = (thing: unknown): thing is null | undefined => isType(thing, 'null') || isType(thing, 'undefined');\n\n/** @public */\nexport const is32Bit = (char: string, i: number): boolean => {\n  return char.codePointAt(i)! > 0xffff;\n};\n\n/** @public */\nexport const getCodePointLength = (str: string): number => {\n  let len = 0;\n  for (let i = 0, strLen = str.length; i < strLen; i += 1) {\n    if (is32Bit(str, i)) i++;\n    len++;\n  }\n  return len;\n};\n\n/** @public */\nexport const isAllSameChar = (str: string, char: string): boolean => {\n  return new RegExp(`^(${char})\\\\1*$`).test(str);\n};\n\n/** @public */\nexport const getCharLength = (str: string): number => {\n  return str.replace(/[^\\x00-\\xff]/g, '  ').length;\n};\n\n/** @public */\nexport const padStart = (str: string, length: number, char: string): string => {\n  const strLen = getCodePointLength(str);\n  const padding = char.repeat(Math.max(0, length - strLen));\n  return padding + str;\n};\n\n/** @public */\nexport const padEnd = (str: string, length: number, char: string): string => {\n  const strLen = getCodePointLength(str);\n  const padding = char.repeat(Math.max(0, length - strLen));\n  return str + padding;\n};\n\n/** @public */\nexport const padStartEnd = (str: string, length: number, char1: string = '', char2: string = char1): string => {\n  const strLen = getCodePointLength(str);\n  const paddingLen = Math.max(0, length - strLen);\n  const leftPadingLen = Math.floor(paddingLen / 2);\n  const rightPadingLen = paddingLen - leftPadingLen;\n  return char1.repeat(leftPadingLen) + str + char2.repeat(rightPadingLen);\n};\n\n/** @public */\nexport const emptyPadStart = (length: number, str: string = '', pad: string = ''): string => {\n  return padStart(str, length, pad);\n};\n\nexport default {\n  getType,\n  isType,\n  isNumber,\n  isString,\n  isArray,\n  isObject,\n  isNullable,\n  is32Bit,\n  getCodePointLength,\n  isAllSameChar,\n  getCharLength,\n  padStart,\n  padEnd,\n  padStartEnd,\n  emptyPadStart,\n};"],"names":["root","factory","exports","module","define","amd","this","__webpack_exports__","thing","Object","prototype","toString","call","slice","toLowerCase","type","getType","isType","char","i","codePointAt","str","len","strLen","length","is32Bit","RegExp","concat","test","replace","getCodePointLength","repeat","Math","max","char1","arguments","undefined","char2","paddingLen","leftPadingLen","floor","rightPadingLen","pad","padStart","isNumber","isString","isArray","isObject","isNullable","isAllSameChar","getCharLength","padEnd","padStartEnd","emptyPadStart","__webpack_modules__"],"sourceRoot":""}